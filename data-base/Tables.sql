DROP DATABASE ShopDb;

CREATE DATABASE ShopDb;

USE ShopDb;

CREATE TABLE Files (
	Id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	Source VARCHAR(255),
    FullName VARCHAR(63) NOT NULL UNIQUE,
    Extension VARCHAR(7) GENERATED ALWAYS AS (SUBSTRING_INDEX(FullName, '.', -1)) STORED,
    Name VARCHAR(55) GENERATED ALWAYS AS (SUBSTRING(FullName, 1, LENGTH(FullName) - LENGTH(Extension) - 1)) STORED,
    Data LONGBLOB,
    Size INT GENERATED ALWAYS AS (LENGTH(Data)) STORED,
    Hash CHAR(40) GENERATED ALWAYS AS (SHA1(Data)) STORED,
    CHECK ((Data IS NOT NULL) OR (Source IS NOT NULL))
);

CREATE TABLE Sections (
    Id MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(63) NOT NULL UNIQUE,
    Image BIGINT UNSIGNED NOT NULL,
    Description VARCHAR(255) NOT NULL,
    ParentSectionId MEDIUMINT UNSIGNED,
    FOREIGN KEY (ParentSectionId) REFERENCES Sections (Id) ON DELETE CASCADE,
    FOREIGN KEY (Image) REFERENCES Files (Id) ON DELETE CASCADE
);

CREATE TABLE UserRoles (
    Name VARCHAR(15) PRIMARY KEY
);

CREATE TABLE Users (
    Id MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    FullName VARCHAR(63) NOT NULL,
    Password VARCHAR(63) NOT NULL,
    Avatar BIGINT UNSIGNED NOT NULL,
    BirthDate DATE NOT NULL,
    EmailAddress VARCHAR(63) CHECK (EmailAddress REGEXP '^[\\w\\d._-]+@[\\w\\d]+\\.[\\w]+$') NOT NULL UNIQUE,
    PhoneNumber VARCHAR(15) CHECK (LENGTH(PhoneNumber) BETWEEN 10 AND 15 AND PhoneNumber NOT LIKE '%[^0-9]%') NOT NULL UNIQUE,
    Address VARCHAR(255),
    Role VARCHAR(15) NOT NULL,
    Priority TINYINT NOT NULL DEFAULT 1,
    FOREIGN KEY (Role) REFERENCES UserRoles(Name) ON DELETE CASCADE,
    FOREIGN KEY (Avatar)  REFERENCES Files (Id) ON DELETE CASCADE
);

CREATE TABLE PaymentMethods (
	Id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY
);

CREATE TABLE UserPaymentMethods (
	PaymentMethodId INT UNSIGNED,
    UserId MEDIUMINT UNSIGNED,
    PRIMARY KEY (PaymentMethodId, UserId),
    FOREIGN KEY (PaymentMethodId) REFERENCES PaymentMethods(Id) ON DELETE CASCADE,
    FOREIGN KEY (UserId) REFERENCES Users(Id) ON DELETE CASCADE
);

CREATE TABLE BankCards (
	Id INT UNSIGNED PRIMARY KEY,
    Number VARCHAR(19) CHECK(LENGTH(Number) BETWEEN 12 AND 19 AND Number NOT LIKE '%[^0-9]%') NOT NULL,
    ExpiryMonth TINYINT UNSIGNED CHECK(ExpiryMonth BETWEEN 1 AND 12) NOT NULL,
    ExpiryYear TINYINT UNSIGNED CHECK(ExpiryYear BETWEEN 0 AND 99) NOT NULL,
    ExpiryDate VARCHAR(5) GENERATED ALWAYS AS (CONCAT(ExpiryMonth, '/', ExpiryYear)) STORED,
    CardholderName VARCHAR(63) NOT NULL,
    Cvc CHAR(3) CHECK(LENGTH(Cvc) = 3 AND Cvc NOT LIKE '%[^0-9]%'),
    FOREIGN KEY (Id) REFERENCES PaymentMethods(Id) ON DELETE CASCADE
);

CREATE TABLE Items (
    Id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
    Name VARCHAR(63) NOT NULL UNIQUE,
    Description VARCHAR(255) NOT NULL,
    SectionId MEDIUMINT UNSIGNED NOT NULL,
    FOREIGN KEY (SectionId) REFERENCES Sections(Id) ON DELETE CASCADE
);

CREATE TABLE ItemFiles (
	ItemId INT UNSIGNED,
    FileId BIGINT UNSIGNED,
    PRIMARY KEY (ItemId, FileId),
    FOREIGN KEY (ItemId) REFERENCES Items(Id) ON DELETE CASCADE,
    FOREIGN KEY (FileId)  REFERENCES Files(Id) ON DELETE CASCADE
);

CREATE TABLE CurrencyUnits (
	Id TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
	Name VARCHAR(15) NOT NULL UNIQUE,
	Symbol VARCHAR(1) NOT NULL UNIQUE,
    Rate DECIMAL(10, 2) NOT NULL
);

CREATE TABLE ItemPriceHistories (
	ItemId INT UNSIGNED,
    StartDateTime DATETIME DEFAULT NOW() NOT NULL,
    Price DECIMAL(10, 2) CHECK(Price > 0),
    CurrencyUnitId TINYINT UNSIGNED,
    PRIMARY KEY (ItemId, StartDateTime, CurrencyUnitId),
    FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE,
    FOREIGN KEY (CurrencyUnitId)  REFERENCES CurrencyUnits(Id) ON DELETE CASCADE
);

CREATE TABLE Types (
    Name VARCHAR(15) PRIMARY KEY
);

CREATE TABLE Properties (
	Id TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(31) NOT NULL UNIQUE,
    Type VARCHAR(15) NOT NULL,
    FOREIGN KEY (Type) REFERENCES Types(Name) ON DELETE CASCADE
);

CREATE TABLE Units (
	Id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(63) NOT NULL UNIQUE,
    Symbol VARCHAR(15) NOT NULL,
    Coefficient DECIMAL(20, 10) NOT NULL
);

CREATE TABLE PropertyUnits (
    PropertyId TINYINT UNSIGNED,
    UnitId SMALLINT UNSIGNED,
    PRIMARY KEY (PropertyId, UnitId),
    FOREIGN KEY (PropertyId) REFERENCES Properties(Id) ON DELETE CASCADE,
    FOREIGN KEY (UnitId) REFERENCES Units(Id) ON DELETE CASCADE
);

CREATE TABLE Characteristics (
	Id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(61) NOT NULL UNIQUE,
    PropertyId TINYINT UNSIGNED NOT NULL,
    Description VARCHAR(255),
    FOREIGN KEY (PropertyId) REFERENCES Properties(Id) ON DELETE CASCADE
);

CREATE TABLE ItemCharacteristics (
    ItemId INT UNSIGNED,
    CharacteristicId INT UNSIGNED,
    UnitId SMALLINT UNSIGNED,
    Value VARCHAR(255) NOT NULL,
    PRIMARY KEY (ItemId, CharacteristicId), 
    FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE,
    FOREIGN KEY (CharacteristicId)  REFERENCES Characteristics(Id) ON DELETE CASCADE,
    FOREIGN KEY (UnitId) REFERENCES Units(Id) ON DELETE CASCADE
);

CREATE TABLE SectionCharacteristics (
    SectionId MEDIUMINT UNSIGNED,
    CharacteristicId INT UNSIGNED,
    PRIMARY KEY(SectionId, CharacteristicId),
    FOREIGN KEY (SectionId) REFERENCES Sections(Id) ON DELETE CASCADE, 
    FOREIGN KEY (CharacteristicId) REFERENCES Characteristics(Id) ON DELETE CASCADE
);

CREATE TABLE Favorites (
    UserId MEDIUMINT UNSIGNED,
    ItemId INT UNSIGNED,
    PRIMARY KEY(ItemId, UserId),
    FOREIGN KEY (UserId)  REFERENCES Users(Id) ON DELETE CASCADE,
    FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE
);

CREATE TABLE Carts (
    UserId MEDIUMINT UNSIGNED,
    ItemId INT UNSIGNED,
    Count MEDIUMINT UNSIGNED CHECK(Count > 0) NOT NULL,
    PRIMARY KEY(ItemId, UserId),
    FOREIGN KEY (UserId)  REFERENCES Users(Id) ON DELETE CASCADE,
    FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE
);

CREATE TABLE Storages (
    Id MEDIUMINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(64) NOT NULL UNIQUE,
    Description VARCHAR(255),
    Address VARCHAR(255) NOT NULL UNIQUE,
    IsFull BOOL NOT NULL DEFAULT FALSE
);

CREATE TABLE StoredItemSets (
    StorageId MEDIUMINT UNSIGNED,
    ItemId INT UNSIGNED,
    Count MEDIUMINT UNSIGNED CHECK(Count > 0) NOT NULL,
    PRIMARY KEY (ItemId, StorageId),
    FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE,
    FOREIGN KEY (StorageId)  REFERENCES Storages(Id) ON DELETE CASCADE
);

CREATE TABLE PickupPoints (
    Id MEDIUMINT UNSIGNED PRIMARY KEY,
    FOREIGN KEY (Id)  REFERENCES Storages(Id) ON DELETE CASCADE
);

CREATE TABLE PickupPointFiles (
	PickupPointId MEDIUMINT UNSIGNED,
    FileId BIGINT UNSIGNED,
    PRIMARY KEY (PickupPointId, FileId),
    FOREIGN KEY (PickupPointId) REFERENCES PickupPoints(Id) ON DELETE CASCADE,
    FOREIGN KEY (FileId)  REFERENCES Files(Id) ON DELETE CASCADE
);

CREATE TABLE WorkingTimes (
    PickupPointId MEDIUMINT UNSIGNED,
    StartTime TIME NOT NULL,
    EndTime TIME NOT NULL,
    PRIMARY KEY (PickupPointId, StartTime, EndTime),
    FOREIGN KEY (PickupPointId)  REFERENCES PickupPoints(Id) ON DELETE CASCADE
);

CREATE TABLE Orders (
    Id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    UserId MEDIUMINT UNSIGNED NOT NULL,
    FOREIGN KEY (UserId)  REFERENCES Users(Id) ON DELETE CASCADE
);

CREATE TABLE OrderItemSets (
    OrderId BIGINT UNSIGNED,
    ItemId INT UNSIGNED,
    Count MEDIUMINT UNSIGNED CHECK(Count > 0) NOT NULL,
    PRIMARY KEY (OrderId, ItemId),
    FOREIGN KEY (OrderId)  REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE
);

CREATE TABLE OrderStatuses (
    Name VARCHAR(15) PRIMARY KEY
);

CREATE TABLE OrderHistories (
    OrderId BIGINT UNSIGNED,
    StartDateTime DATETIME DEFAULT NOW() NOT NULL,
    OrderStatus VARCHAR(15) NOT NULL,
    PRIMARY KEY (OrderId, StartDateTime),
    FOREIGN KEY (OrderId)  REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (OrderStatus)  REFERENCES OrderStatuses(Name) ON DELETE CASCADE
);

CREATE TABLE StoredOrderItemSets (
    StorageId MEDIUMINT UNSIGNED,
    ItemId INT UNSIGNED,
    OrderId BIGINT UNSIGNED,
    Count MEDIUMINT UNSIGNED CHECK(Count > 0) NOT NULL,
    PRIMARY KEY (ItemId, StorageId, OrderId),
    FOREIGN KEY (ItemId, OrderId)  REFERENCES OrderItemSets(ItemId, OrderId) ON DELETE CASCADE,
    FOREIGN KEY (StorageId)  REFERENCES Storages(Id) ON DELETE CASCADE
);

CREATE TABLE IssueOrders (
    Id BIGINT UNSIGNED PRIMARY KEY,
    IssueAddress VARCHAR(255) NOT NULL,
    FOREIGN KEY (Id) REFERENCES Orders(Id) ON DELETE CASCADE
);

CREATE TABLE PickupPointOrders (
    Id BIGINT UNSIGNED PRIMARY KEY,
    PickupPointId MEDIUMINT UNSIGNED NOT NULL,
    FOREIGN KEY (Id) REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (PickupPointId) REFERENCES PickupPoints(Id) ON DELETE CASCADE
);

CREATE TABLE CheckSets (
	Id BIGINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    CurrencyUnitId TINYINT UNSIGNED NOT NULL,
    PaymentMethodId INT UNSIGNED,
    FOREIGN KEY (CurrencyUnitId)  REFERENCES CurrencyUnits(Id) ON DELETE CASCADE,
    FOREIGN KEY (PaymentMethodId)  REFERENCES PaymentMethods(Id) ON DELETE CASCADE
);

CREATE TABLE CheckItemSets (
	Id BIGINT UNSIGNED PRIMARY KEY,
    ItemId INT UNSIGNED NOT NULL,
	Count MEDIUMINT UNSIGNED CHECK(Count > 0) NOT NULL,
    FOREIGN KEY (Id) REFERENCES CheckSets(Id) ON DELETE CASCADE,
	FOREIGN KEY (ItemId)  REFERENCES Items(Id) ON DELETE CASCADE
);

CREATE TABLE CheckDeliverySets (
	Id BIGINT UNSIGNED PRIMARY KEY,
    Price DECIMAL(10, 2) CHECK(Price > 0),
    FOREIGN KEY (Id) REFERENCES CheckSets(Id) ON DELETE CASCADE
);

CREATE TABLE Checks (
	OrderId BIGINT UNSIGNED,
	CheckSetId BIGINT UNSIGNED,
    PRIMARY KEY (OrderId, CheckSetId),
	FOREIGN KEY (OrderId)  REFERENCES Orders(Id) ON DELETE CASCADE,
    FOREIGN KEY (CheckSetId)  REFERENCES CheckSets(Id) ON DELETE CASCADE
);

/**CREATE TABLE DiscountItemSelections (
	Id INTEGER PRIMARY KEY
);

CREATE TABLE DiscountAmounts (
	Id INTEGER PRIMARY KEY
);

CREATE TABLE DiscountConditions (
	Id INTEGER PRIMARY KEY
);

CREATE TABLE Discounts (
	ItemSelectionId INTEGER,
    AmountId INTEGER,
    ConditionId INTEGER
);*/
